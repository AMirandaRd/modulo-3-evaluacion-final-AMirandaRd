{"version":3,"sources":["images/losiento.jpg","services/api.js","images/rick-and-morty.jpg","components/CharacterCard.js","components/CharacterList.js","components/Filters.js","components/CharacterDetail.js","images/Rick_and_Morty_-_logo_(English).png","components/Header.js","components/App.js","index.js"],"names":["callToApi","fetch","then","response","json","apiData","results","map","person","id","name","pict","image","specie","species","origin","status","episodes","episode","length","gender","CharacterCard","props","to","character","className","src","alt","CharachterList","console","log","data","notfound","eachItemList","Filters","placeholder","type","value","searchByName","onChange","handleSearchByName","searchBySpecie","handleSearchBySpecie","action","htmlFor","handleSearchByStatus","checked","searchByStatus","handleSearchByGender","searchByGender","CharacterDetail","undefined","sorrylogo","Header","logo","App","useState","setData","setSearchByName","setSearchBySpecie","setSearchByStatus","setSearchByGender","useEffect","initialData","orderedData","sort","a","b","routeData","useRouteMatch","characterId","params","selectedCharacter","find","parseInt","filteredData","filter","toLocaleLowerCase","includes","onSubmit","event","preventDefault","path","exact","ev","currentTarget","sorry","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e7c95c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/losiento.35b12da5.jpg\";","const callToApi = () => {\n  return fetch(\n    'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json'\n  )\n    .then((response) => response.json())\n    .then((apiData) => {\n      return apiData.results.map((person) => {\n        return {\n          id: person.id,\n          name: person.name,\n          pict: person.image,\n          specie: person.species,\n          origin:person.origin.name,\n          status: person.status,\n          episodes:person.episode.length,\n          gender:person.gender,\n        };\n      });\n    });\n};\nexport default callToApi;\n","export default __webpack_public_path__ + \"static/media/rick-and-morty.28e5f715.jpg\";","import '../styles/CharacterCard.scss';\nimport { Link } from 'react-router-dom';\n\nconst CharacterCard = (props) => {\n  return (\n    <Link to={`./character/${props.character.id}`}>\n      <img\n        className='pictures'\n        src={props.character.pict}\n        alt={`Picture of ${props.character.name}`}\n      />\n      <h3 className='character-name'>{props.character.name}</h3>\n      <h4 className='character-specie'> {props.character.specie}</h4>\n    </Link>\n  );\n};\n\nexport default CharacterCard;\n","import '../styles/CharacterList.scss';\nimport '../styles/Images.scss'\nimport notfound from '../images/rick-and-morty.jpg'\nimport CharacterCard from './CharacterCard';\n\nconst CharachterList = (props) => {\n  console.log(props.data)\n  if (props.data.length === 0){\n    return(\n      <section>\n        <p>Ese nombre no se ha encontrado...</p>\n        <img className='all-images' src={notfound} alt=\"Character Missed\" />\n      </section>\n    )\n  } else{\n  \n  const eachItemList = props.data.map((character) => (\n    \n    <li className='card' key={character.id} id={character.id}>\n      <CharacterCard character={character} />\n    </li>\n  ));\n  return <ul className='card-list'>{eachItemList}</ul>;\n};}\n\nexport default CharachterList;\n","import '../styles/Filters.scss'\n\nconst Filters = (props) => {\n  return (\n    <section className='filters'>\n      <input\n      placeholder='Busca tu personaje favorito'\n        className='search-name'\n        type='text'\n        name='name'\n        value={props.searchByName}\n        onChange={props.handleSearchByName}\n      />\n      <select className=\"search-specie\" name=\"specie\" id=\"specie\" value={props.searchBySpecie} onChange={props.handleSearchBySpecie}>\n      <option value=\"all\">Todos</option>\n      <option value=\"Human\">Humano</option>\n      <option value=\"Alien\">Alien</option>\n      </select>\n\n      <fieldset action=\"\" className='StatusSearcher'>\n        <p>Buscar solo personajes que...</p>\n        <label htmlFor=\"status\">\n         Hayan fallecido\n         <input type=\"radio\"\n         name='status'\n         value=\"Dead\"\n         onChange={props.handleSearchByStatus}\n         checked={props.searchByStatus==='Dead'}/>\n        \n         </label>\n         <label htmlFor=\"status\">\n           Sigan vivos\n           <input type=\"radio\"\n           name='status'\n           value='Alive'\n           onChange={props.handleSearchByStatus}\n           checked={props.searchByStatus==='Alive'}\n           />\n        \n         </label>\n         <label htmlFor=\"status\">\n         Desconocido\n         <input type=\"radio\"\n         name='status'\n         value=\"unknown\"\n         onChange={props.handleSearchByStatus}\n         checked={props.searchByStatus==='unknown'}/>\n         </label>\n      </fieldset>\n\n       <fieldset action=\"\" className='GenderSearcher'>\n         <p> Filtrar por sexo:</p>\n         <label htmlFor=\"gender\">\n         Mujer\n         <input type=\"radio\"\n         name='gender'\n         value=\"Female\"\n         onChange={props.handleSearchByGender}\n         checked={props.searchByGender==='Female'}/>\n         </label>\n         <label htmlFor=\"gender\">\n           Hombre\n           <input type=\"radio\"\n           name='gender'\n           value='Male'\n           onChange={props.handleSearchByGender}\n           checked={props.searchByGender==='Male'}\n           />\n         \n         </label>\n         <label htmlFor=\"status\">\n         Desconocido\n         <input type=\"radio\"\n         name='status'\n         value=\"unknown\"\n         onChange={props.handleSearchByGender}\n         checked={props.searchByGender==='unknown'}/>\n         </label>\n         </fieldset>\n       \n    </section>\n     );\n};\n\nexport default Filters;\n","import { Link } from 'react-router-dom';\nimport sorrylogo from '../images/losiento.jpg';\n\nconst CharacterDetail = (props) => {\n  if (props.character === undefined) {\n    return (\n      <section>\n        <p>El personaje no existe</p>\n        <img src={sorrylogo} alt='failed attempt' />\n      </section>\n    );\n  } else {\n    return (\n      <>\n        <img\n          className='picture-detail'\n          src={props.character.pict}\n          alt={`Picture of ${props.character.name}`}\n        />\n        <ul>\n          <li className='character-name'>{props.character.name}</li>\n          <li className='character-specie'> {props.character.specie}</li>\n          <li>Natural de:{props.character.origin}</li>\n          <li> Estado:{props.character.status}</li>\n          <li>Sexo:{props.character.gender}</li>\n          <li>Número de apariciones:{props.character.episodes}</li>\n        </ul>\n        <Link to='/'>\n          {' '}\n          <button>volver</button>\n        </Link>\n      </>\n    );\n  }\n};\nexport default CharacterDetail;\n","export default __webpack_public_path__ + \"static/media/Rick_and_Morty_-_logo_(English).de13d484.png\";","import logo from '../images/Rick_and_Morty_-_logo_(English).png'\nimport '../styles/Images.scss'\nconst Header =( )=>{\n\n    return(\n        <img className='all-images' src={logo} alt=\"Headercover\"/>\n\n\n    )\n}\nexport default Header","import '../styles/reset.scss';\nimport '../styles/Images.scss'\nimport { useEffect, useState } from 'react';\nimport { Route, Switch, useRouteMatch} from 'react-router-dom';\nimport sorry from '../images/losiento.jpg'\nimport callToApi from '../services/api';\nimport CharachterList from './CharacterList';\nimport Filters from './Filters';\nimport CharacterDetail from './CharacterDetail';\nimport Header from './Header';\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [searchByName, setSearchByName] = useState('');\n  const [searchBySpecie, setSearchBySpecie]= useState('all');\n  const [searchByStatus, setSearchByStatus]= useState('');\n  const [searchByGender, setSearchByGender]=useState('')\n\n useEffect(() => {\n    callToApi().then((initialData) => {\n     const orderedData= initialData.sort((a, b) => (a.name > b.name ? 1 : a.name< b.name? -1 : 0)) \n      setData(orderedData);\n    });\n  }, []); \n\n  \n\n  const routeData = useRouteMatch('/character/:id');\n  const characterId = routeData !== null ? routeData.params.id : '';\n \n\n  const selectedCharacter = data.find(\n    (character) => character.id === parseInt(characterId)\n  );\n\n  const handleSearchByName = (ev) => {\n    setSearchByName(ev.currentTarget.value);\n  };\n\n  const handleSearchBySpecie=(ev)=>{\n    setSearchBySpecie(ev.currentTarget.value)\n  }\n  const handleSearchByStatus =(ev)=>{\n    setSearchByStatus(ev.currentTarget.value)\n  }\n  \n  const handleSearchByGender=(ev)=>{\n    setSearchByGender(ev.currentTarget.value)\n  }\n  const handleForm = (event) => {\n    event.preventDefault();\n  };\n\n  const filteredData = data\n  .filter((character) =>\n    character.name\n      .toLocaleLowerCase()\n      .includes(searchByName.toLocaleLowerCase()))    \n  \n  .filter((character) => searchBySpecie === 'all' || searchBySpecie === character.specie\n      )\n  .filter((character) =>{ if(searchByStatus === ''){\n    return true\n  }else if( searchByStatus === character.status){\n    return character\n  }\n})\n  .filter((character)=>{if(searchByGender===''){\n    return true\n  }else if (searchByGender=== character.gender){\n    return character\n  }\n}\n  )\n \n \n  \n  return (\n    <form onSubmit={handleForm}>\n      <Switch>\n        <Route path='/character/:id'>\n          <CharacterDetail character={selectedCharacter} />\n        </Route>\n        <Route exact path='/'>\n          <Header/>\n\n          <Filters\n            searchByName={searchByName}\n            handleSearchByName={handleSearchByName}\n            searchBySpecie={searchBySpecie}\n            handleSearchBySpecie={handleSearchBySpecie}\n            searchByStatus={searchByStatus}\n            handleSearchByStatus={handleSearchByStatus}\n            searchByGender={searchByGender}\n            handleSearchByGender={handleSearchByGender} \n          />\n           \n\n          <CharachterList data={filteredData} />\n        </Route>\n        <Route>\n          <section>\n            <p> Ese personaje no existe!</p>\n            <img className='all-images' src={sorry} alt=\"Search again\" />\n\n          </section>\n        </Route>\n      </Switch>\n    </form>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\n\nReactDOM.render\n(\n<HashRouter>\n<App />\n</HashRouter>,\n\ndocument.getElementById('root')\n);\n\n"],"sourceRoot":""}